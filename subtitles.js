const fs = require('fs');
const path = require('path');
const utils = require('./utils');
const async = require('async');
const cheerio = require('cheerio');
const FONT_SIZE = 20;
const REFS_FONT_SIZE = 16; 

function generateSubtitle(text, audio, callback) {
  // Change color and font size of the references numbers
  const subtitleText = text.replace(/\[([0-9]+)\]/g, `{\\fs18}{\\c&HFF2E00&}[$1]{\\c&HFFFFFF&}{\\fs${FONT_SIZE}}`);

  utils.getRemoteFileDuration(audio, (err, duration) => {

    if (err) {
      return callback(err);
    }

    const fileContent = 
`
[Script Info]
; Script generated by Videowiki Exporter
; http://www.videowiki.wmflabs.org/
Title: Videowiki Generated subtitle
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1280
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, AngleBorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Sans,${FONT_SIZE},&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:${duration},Default,,0,0,0,,${subtitleText}
`;
    const subtitleName = parseInt(Date.now() + Math.random() * 100000) + '-sub.ass';
    
    fs.writeFile(path.join(__dirname, subtitleName), fileContent, (err) => {
      if (err) {
        console.log('Error writing subtitle file ', err);
        return callback(err);
      }
      return callback(null, subtitleName);
    })
  })
}

function formatDurationPart(num) {
  if (num < 10) return `0${num}`;
  return `${num}`;
}

function formatDuration(totalSeconds) {
  const hours = parseInt(totalSeconds/3600);
  const minutes = parseInt((totalSeconds / 60) % 60);
  const seconds = (parseFloat(totalSeconds % 60).toFixed(3)).toString().replace('.', ',');

  return `${formatDurationPart(hours)}:${formatDurationPart(minutes)}:${formatDurationPart(seconds)}`;

}

function generateSrtSubtitles(slides, multiplyFactor, callback) {
  const slidesSlice = slides.slice();
  const slidesFuncArray = [];
  slidesSlice.forEach(slide => {
    function audioLength(cb) {
      utils.getRemoteFileDuration(`https:${slide.audio}`, (err, duration) => {
        if (err) return cb(err);
        slide.duration = duration;
        return cb();
      })
    }
    slidesFuncArray.push(audioLength);
  });

  async.parallelLimit(slidesFuncArray, 5, (err, result) => {
    if (err) return callback(err);
    
    const subList = [];
    slidesSlice.forEach((slide, index) => {
      let start;
      let end;

      if (index === 0) {
        start = formatDuration(0);
        end = formatDuration((slide.duration * multiplyFactor));
      } else {
        const prevSlidesDurations = slidesSlice.slice(0, index).map(s => s.duration).reduce((acc, d) => acc + d, 0);
        start = formatDuration((prevSlidesDurations * multiplyFactor));
        end = formatDuration(((prevSlidesDurations + slide.duration) * multiplyFactor));
      }
      const $ = cheerio.load(`<div>${slide.text}</div>`);
      slide.text = $.text();
      slide.text = slide.text.replace(/\[([0-9]+)\]/g, `<font color="#00008b" size="1"><b>[$1]</b></font>`);
      
      subList.push({
        index,
        text: `${index + 1}\n${start} --> ${end}\n<font>${slide.text}</font>`
      });

    })

    const subname = '/home/hassan/Desktop/subtitle.srt'
    fs.writeFileSync(subname, subList.map(sub => sub.text).join('\n\n'));
    return callback(null, subname);
  })
}

const acute_vision_loss = require('./acute_vision_loss.json');

generateSrtSubtitles(acute_vision_loss.slidesHtml, 1.1, (err, result) => {
  console.log(err, result);
})



module.exports = {
  generateSubtitle,
}

// generateSubtitle('Retinal detachment should be considered if there were preceding flashes or floaters, or if there is a new visual field defect in one eye.[3][4] If treated early enough, retinal tear and detachment can have a good outcome.[3]', 'https://dnv8xrxt73v5u.cloudfront.net/549754ec-5e55-472f-8715-47120efc4567.mp3', (err, filepath) => {
//   console.log(err, filepath)
// })